name: Release macOS

on:
    push:
        branches: [production]

env:
    NODE_VERSION: "20"

permissions:
    contents: write

jobs:
    prepare:
        uses: ./.github/workflows/release-prepare.yml

    build-macos:
        needs: prepare
        runs-on: macos-latest
        environment: macos-release
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Enable pnpm via corepack
              run: |
                  corepack enable
                  corepack prepare pnpm@latest --activate
                  pnpm -v

            - name: Setup Python 3.11 for node-gyp
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"
            - name: Point node-gyp at Python
              run: echo "npm_config_python=$(python3 -c 'import sys; print(sys.executable)')" >> $GITHUB_ENV

            - name: Get pnpm store path
              id: pnpm-store
              run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

            - name: Cache pnpm store
              uses: actions/cache@v4
              with:
                  path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
                  key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      pnpm-store-${{ runner.os }}-

            - name: Clean previous Electron headers/cache
              run: |
                  rm -rf ~/.electron-gyp
                  rm -rf node_modules/.cache

            - name: Install deps
              run: pnpm install --frozen-lockfile

            - name: Rebuild native modules for Electron
              working-directory: apps/frontend
              run: pnpm exec electron-rebuild -f -w better-sqlite3

            # (Signing temporarily removed)

            - name: Build macOS artifacts (DMG/ZIP)
              working-directory: apps/frontend
              run: pnpm run build:mac

            - name: Upload to release (DMG/ZIP)
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ needs.prepare.outputs.tag }}
                  files: |
                      apps/frontend/release/*.dmg
                      apps/frontend/release/*.zip
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
